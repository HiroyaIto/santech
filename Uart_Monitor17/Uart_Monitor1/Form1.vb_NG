Imports System.IO.Ports

Public Class Form1

#Const MNI_ENABLE = 0'1：WMI有 0:WMI無し 

    Const RXRGSZ As Integer = 64
    'Const RXRGSZ As Integer = 2048

    Structure TYP_COMRING
        Dim rp As Integer
        Dim wp As Integer
        Dim dat() As Byte
    End Structure

    Structure COM_PORT
        Dim dvicename As String
        Dim comno As String
    End Structure

    Dim RxRing As TYP_COMRING '受信したデータを管理
    Dim ComInfo() As COM_PORT
    Dim selectComNo As Integer

    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        ComboInit() 'Comboboxを初期化する
        RxRingInit() 'RxRingの初期化を行う
    End Sub

    'RxRingの初期化を行う
    Private Sub RxRingInit()
        RxRing.wp = 0
        RxRing.rp = 0
        ReDim RxRing.dat(RXRGSZ - 1)
    End Sub

    'Comboboxを初期化する
    Private Sub ComboInit()

#If MNI_ENABLE Then
        ComPortChk2() 
#Else
        ComPortChk() 'ComboBox1の初期化（ポートの検索）
#End If
        ComboBox2.Items.Add("9600")
        ComboBox2.Items.Add("19200")
        ComboBox2.Items.Add("115200")
        ComboBox2.Text = "19200"
    End Sub

    '存在するポートを検索する
    Private Sub ComPortChk()
        Dim comno() As String = SerialPort.GetPortNames
        Dim i As Integer

        ComboBox1.Items.Clear() 'アイテムをクリア

        If comno.Length = 0 Then
            ComboBox1.Text = "COMポートがみつかりません。"
        Else
            For i = 0 To comno.Length - 1
                ComboBox1.Items.Add(comno(i))
            Next
            ComboBox1.Text = comno(0)
        End If

    End Sub

    '存在するポートを検索する
    Private Sub ComPortChk2()
        'Dim mngstr As New Management.ManagementObjectSearcher("Select * from Win32_SerialPort")
        'Dim mc As Management.ManagementObjectCollection
        'Dim serial As Management.ManagementBaseObject
        Dim comno() As String = SerialPort.GetPortNames
        Dim i, j As Integer
        Dim serialcnt As Integer
        Dim comcnt As Integer
        Dim strno As Byte
        Dim str As String
        Dim comstr As String

        'mc = mngstr.Get()
        'serialcnt = mc.Count
        comcnt = comno.Length
        ReDim ComInfo(serialcnt - 1)

        'For Each serial In mc
        'ComInfo(i).dvicename = serial("Name")

        'strno = InStr(ComInfo(i).dvicename, "(COM")
        'If strno <> 0 Then
        'strno += 1
        'comstr = ""
        'For j = 0 To 6
        'str = Mid(ComInfo(i).dvicename, strno + j, 1)
        'If str <> ")" Then
        'comstr &= str
        'Else
        'Exit For
        'End If
        'Next
        'ComInfo(i).comno = comstr
        'End If

        'i += 1
        'Next

        ComboBox1.Items.Clear() 'アイテムをクリア

        If serialcnt = 0 Then
            ComboBox1.Text = "COMポートがみつかりません。"
        Else
            For i = 0 To ComInfo.Length - 1
                ComboBox1.Items.Add(ComInfo(i).dvicename)
            Next
            ComboBox1.Text = ComInfo(0).dvicename
        End If

    End Sub

    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click

#If MNI_ENABLE Then
        ComPortChk2() '存在するポートを検索する
#Else
        ComPortChk() '存在するポートを検索する
#End If

    End Sub

    Private Sub Button2_Click(sender As Object, e As EventArgs) Handles Button2.Click
        PortOpen() 'ポートをオープンする
    End Sub

    'ポートをオープンする
    Private Sub PortOpen()

        Try
            With SerialPort1
                .Close() 'ポートを閉じる

#If MNI_ENABLE Then
                .PortName = ComInfo(selectComNo).comno
#Else
                .PortName = ComboBox1.Text
#End If
                .BaudRate = ComboBox2.Text
                .DataBits = 8
                .Parity = Parity.None
                .StopBits = StopBits.One
                .Handshake = Handshake.None
                .RtsEnable = False
                .DtrEnable = False
                .Open() 'ポートをオープンする
            End With

            Timer1.Enabled = True
        Catch ex As Exception
            MsgBox(ComboBox1.Text & "をオープンできませんでした。", MsgBoxStyle.OkOnly)
        End Try
    End Sub

    Private Sub Button3_Click(sender As Object, e As EventArgs) Handles Button3.Click
        SerialWrite()
    End Sub

    Private Sub SerialWrite()

        If SerialPort1.IsOpen Then
            SerialPort1.Write(TextBox1.Text)
        End If

    End Sub

    Dim data_out_res As Integer = 0 '2024.10.26
    Dim buf_chk(32) As Byte  '2024.10.26
    Dim count_32 As Integer = 0 '2024.10.26

    Dim i As Integer = 0
    Dim x As Single = 0 '■座標ｘ１初期値 ０
    Dim xx As Single = 0 '■座標ｙ２

    Delegate Sub DisplayTextDelegate(ByVal dat As Short)
    Delegate Sub DisplayTextAllDelegate(ByRef datz() As Short, ByRef daty() As Short, ByRef datx() As Short)

    'Dim ii As Single = 0  '■繰り返し計算用
    Dim Zy As Single = 100 '■座標ｙ１初期値 １００（オフセット）
    Dim Zyy As Single '■座標ｘ２
    Dim Yy As Single = 100 '■座標ｙ１初期値 １００（オフセット）
    Dim Yyy As Single '■座標ｘ２
    Dim Xy As Single = 100 '■座標ｙ１初期値 １００（オフセット）
    Dim Xyy As Single '■座標ｘ２

    Private Sub DisplayText_init(ByVal dat As Short)

        'テキストBOXに文字列を追加  
        'Me.TextBox1.Text &= dat & " "

        '描画スタート
        'Static Dim x As Single = 0 '■座標ｘ１初期値 ０
        Static Dim y As Single = 100 '■座標ｙ１初期値 １００（オフセット）
        Static Dim i As Single '■繰り返し計算用
        Static Dim yy As Single '■座標ｘ２
        'Static Dim xx As Single '■座標ｙ２
        'Static Dim xx As Single '■座標ｙ２
        Static Dim g As Graphics = PictureBox1.CreateGraphics '■PictureBox1に書く
        Dim blackPen As New Pen(Color.Black, 1)
        Dim RedPen As New Pen(Color.Red, 2)

        'blackPen.DashStyle = DashStyle.Dot

        g.DrawLine(Pens.Black, 0, 150, 400, 150)
        For i = 1 To 15
            g.DrawLine(blackPen, 0, 150 + i * 10, 400, 150 + i * 10)
        Next
        For i = 1 To 15
            g.DrawLine(blackPen, 0, 150 - i * 10, 400, 150 - i * 10)
        Next
        For i = 1 To 39
            g.DrawLine(blackPen, i * 10, 0, i * 10, 300)
        Next

        blackPen.Width = 2
        For i = 1 To 2
            g.DrawLine(blackPen, 0, 150 - i * 50, 400, 150 - i * 50)
            g.DrawLine(blackPen, 0, 150 + i * 50, 400, 150 + i * 50)
        Next
        g.DrawLine(blackPen, 0, 150, 400, 150)
        For i = 1 To 8
            g.DrawLine(blackPen, i * 50, 0, i * 50, 400)
        Next


        'Dim num As Integer = Integer.Parse(strDisp)

        'If (i = 0) Then
        '    y = -(dat - 128) + 128 '■座標yyの計算（"-"で上下反転，*10で拡大，+100でオフセット）
        '    'g.DrawLine(Pens.Red, x, y, x, y) '■ライン描画 始点x,y ～ 終点xx,yy
        '    g.DrawLine(RedPen, x, y, x, y)
        '    i = i + 1
        'Else

        '    yy = -(dat - 128) + 128 '■座標yyの計算（"-"で上下反転，*10で拡大，+100でオフセット）
        '    'xx = xx + 10 '■座標xxの計算 （*10で拡大）
        '    xx = xx + 1 '■座標xxの計算 （*10で拡大）
        '    'g.DrawLine(Pens.Red, x, y, xx, yy) '■ライン描画 始点x,y ～ 終点xx,yy
        '    g.DrawLine(RedPen, x, y, xx, yy)
        '    x = xx '■終点xxを次の始点xとする
        '    y = yy '■終点yyを次の始点yとする
        'End If



    End Sub

    Private Sub DisplayTextAll(ByRef datz() As Short, ByRef daty() As Short, ByRef datx() As Short)

        Static Dim g As Graphics = PictureBox1.CreateGraphics '■PictureBox1に書く
        Dim blackPen As New Pen(Color.Black, 1)
        Dim RedPen As New Pen(Color.Red, 2)
        Dim GreenPen As New Pen(Color.Green, 2)
        Dim BluePen As New Pen(Color.Blue, 2)

        Dim i As Integer = 0  ' local variable for statement 


        g.DrawLine(Pens.Black, 0, 150, 400, 150)


        'For i = 0 To 9
        For i = 0 To 0
            'For i = 0 To 49
            'For i = 0 To 19
            Zyy = 150 - datz(i)  '■座標yyの計算（"-"で上下反転，*10で拡大，+100でオフセット）
            Yyy = 150 - daty(i)  '■座標yyの計算（"-"で上下反転，*10で拡大，+100でオフセット）
            Xyy = 150 - datx(i)  '■座標yyの計算（"-"で上下反転，*10で拡大，+100でオフセット）
            'xx = xx + 1 '■座標xxの計算 （*10で拡大）
            xx = xx + 10 '■座標xxの計算 （*10で拡大）0.1秒間に10ポイント書いていたが、1ポイントしか書かないので、横軸のstepを10倍する。
            g.DrawLine(RedPen, x, Zy, xx, Zyy)
            g.DrawLine(GreenPen, x, Yy, xx, Yyy)
            g.DrawLine(BluePen, x, Xy, xx, Xyy)
            x = xx '■終点xxを次の始点xとする
            Zy = Zyy '■終点yyを次の始点yとする
            Yy = Yyy '■終点yyを次の始点yとする
            Xy = Xyy '■終点yyを次の始点yとする
        Next

        'End If

        If (x = 400) Then
            Refresh()
            x = 0
            xx = 0
            Dim dlg As New DisplayTextDelegate(AddressOf DisplayText_init)

            Dim dat As Short

            dat = 20
            'MsgBox(dat)
            ''Invoke(New Delegate_RcvDataToTextBox(AddressOf Me.RcvDataToTextBox), args)
            Me.Invoke(dlg, New Object() {dat})
            'Else
        End If

    End Sub

    Dim datz(0) As Short
    Dim daty(0) As Short
    Dim datx(0) As Short

    Dim disp_recv_str_log As String  ' 2021.2.11   
    Dim fileflg As Int16 = 0

    Dim asciiString_useful As String
    Dim asciiString_average As String
    Dim asciiString_diff As String

    Dim file_num As Integer = 0

    Private Sub SerialPort1_DataReceived(sender As Object, e As SerialDataReceivedEventArgs) Handles SerialPort1.DataReceived


        Dim dlgzyx As New DisplayTextAllDelegate(AddressOf DisplayTextAll)


        While SerialPort1.BytesToRead > 0
            Dim receivedByte As Byte = SerialPort1.ReadByte()
            buf_chk(31) = buf_chk(30)
            buf_chk(30) = buf_chk(29)
            buf_chk(29) = buf_chk(28)
            buf_chk(28) = buf_chk(27)
            buf_chk(27) = buf_chk(26)
            buf_chk(26) = buf_chk(25)
            buf_chk(25) = buf_chk(24)
            buf_chk(24) = buf_chk(23)
            buf_chk(23) = buf_chk(22)
            buf_chk(22) = buf_chk(21)
            buf_chk(21) = buf_chk(20)
            buf_chk(20) = buf_chk(19)
            buf_chk(19) = buf_chk(18)
            buf_chk(18) = buf_chk(17)
            buf_chk(17) = buf_chk(16)
            buf_chk(16) = buf_chk(15)
            buf_chk(15) = buf_chk(14)
            buf_chk(14) = buf_chk(13)
            buf_chk(13) = buf_chk(12)
            buf_chk(12) = buf_chk(11)
            buf_chk(11) = buf_chk(10)
            buf_chk(10) = buf_chk(9)
            buf_chk(9) = buf_chk(8)
            buf_chk(8) = buf_chk(7)
            buf_chk(7) = buf_chk(6)
            buf_chk(6) = buf_chk(5)
            buf_chk(5) = buf_chk(4)
            buf_chk(4) = buf_chk(3)
            buf_chk(3) = buf_chk(2)
            buf_chk(2) = buf_chk(1)
            buf_chk(1) = buf_chk(0)
            buf_chk(0) = receivedByte

            If (buf_chk(31) = &H3A) Then
                data_out_res = 1
            Else
                data_out_res = 0
            End If

            If (data_out_res = 1) Then
                count_32 = 0
            Else
                count_32 = count_32 + 1
            End If

            If (count_32 = 0) Then
                'TextBox2.Text = buf_chk(30).ToString() & buf_chk(29).ToString() & buf_chk(28).ToString() & buf_chk(27).ToString() &
                'buf_chk(26).ToString() & buf_chk(25).ToString() & buf_chk(24).ToString()
                ''TextBox2.Text = buf_chk(30) & buf_chk(29) & buf_chk(28) & buf_chk(27) & buf_chk(26) & buf_chk(25) & buf_chk(24)
                Dim byteArray_useful() As Byte = {buf_chk(30), buf_chk(29), buf_chk(28), buf_chk(27), buf_chk(26), buf_chk(25), buf_chk(24), buf_chk(23)}
                asciiString_useful = System.Text.Encoding.ASCII.GetString(byteArray_useful)
                TextBox3.Text = asciiString_useful 'GUのテキストボックス用
                Dim number_useful As Integer = Convert.ToInt32(asciiString_useful)
                TextBox6.Text = number_useful.ToString() 'グラフ表示の演算用変数

                Dim byteArray_average() As Byte = {buf_chk(21), buf_chk(20), buf_chk(19), buf_chk(18), buf_chk(17), buf_chk(16), buf_chk(15), buf_chk(14)}
                asciiString_average = System.Text.Encoding.ASCII.GetString(byteArray_average)
                TextBox4.Text = asciiString_average 'GUのテキストボックス用
                Dim number_average As Integer = Convert.ToInt32(asciiString_average)
                TextBox7.Text = number_average.ToString() 'グラフ表示の演算用変数

                Dim byteArray_diff() As Byte = {buf_chk(12), buf_chk(11), buf_chk(10), buf_chk(9), buf_chk(8), buf_chk(7), buf_chk(6), buf_chk(5)}
                asciiString_diff = System.Text.Encoding.ASCII.GetString(byteArray_diff)
                TextBox5.Text = asciiString_diff 'GUのテキストボックス用
                Dim number_diff As Integer = Convert.ToInt32(asciiString_diff)
                TextBox8.Text = number_diff.ToString() 'グラフ表示の演算用変数


                'TextBox2.Text &= asciiString & Environment.NewLine
                'Dim number As Integer = Convert.ToInt32(asciiString)
                'TextBox2.Text = number.ToString()
                'Console.WriteLine(number)

                datz(0) = number_useful / 40
                daty(0) = number_average / 40
                datx(0) = number_diff / 40

                'count_32 = 0になるのは、0.1秒づつなので、0.1秒毎に、グラフを表示する。
                Me.Invoke(dlgzyx, New Object() {datz, daty, datx}) 'Me.Invoke(dlgzyx, New Object() {datz, daty, datt2})  ' ファイル出力しながら、画面表示するとジャギーになるので、排他制御する                          

                'ファイル出力処理
                If (fileflg = 1) Then

                    Dim disp_recv_str_log3 As String

                    disp_recv_str_log3 = ""

                    disp_recv_str_log3 = disp_recv_str_log3 & "," & asciiString_useful & "," & asciiString_average & "," & asciiString_diff '
                    disp_recv_str_log3 = disp_recv_str_log3 & vbCrLf
                    Writer.Write(disp_recv_str_log3)

                End If


            End If



        End While
    End Sub

    'Private Sub SerialPort1_DataReceived(sender As Object, e As SerialDataReceivedEventArgs) Handles SerialPort1.DataReceived
    'Dim sz As Integer = SerialPort1.BytesToRead
    'Dim i As Integer
    'Dim rxdat(sz - 1) As Byte
    '
    '    SerialPort1.Read(rxdat, 0, sz)
    '    Console.WriteLine("受信したバイト数: " & sz.ToString())


    'For i = 0 To sz - 1
    '        RxRingSet(rxdat(i))
    '        'RxRingSet(48)
    '        Console.WriteLine("受信したバイト: " & rxdat(i).ToString())
    'Next

    'End Sub

    'RxRingのwpを更新する
    Public Sub RxRingSet(ByVal dat)

        RxRing.dat(RxRing.wp) = dat

        RxRing.wp += 1
        If RxRing.wp = RxRing.dat.Length Then
            RxRing.wp = 0
        End If
    End Sub

    Private Sub Timer1_Tick(sender As Object, e As EventArgs) Handles Timer1.Tick
        Dim sz As Integer
        Dim i As Integer

        sz = RxRing.wp - RxRing.rp

        If sz < 0 Then
            sz += RxRing.dat.Length
        End If

        If sz > 0 Then
            For i = 0 To sz - 1
                TextBox2.Text &= Chr(RxRing.dat(RxRing.rp))
                RingRpAdd()
            Next

        End If

    End Sub

    'RxRingのrpを更新する
    Private Sub RingRpAdd()

        RxRing.rp += 1
        If RxRing.rp >= RxRing.dat.Length Then
            RxRing.rp = 0
        End If

    End Sub

    Private Sub Button4_Click(sender As Object, e As EventArgs) Handles Button4.Click
        TextBox2.Clear()
    End Sub

    Private Sub ComboBox1_SelectedIndexChanged(sender As Object, e As EventArgs) Handles ComboBox1.SelectedIndexChanged
        selectComNo = ComboBox1.SelectedIndex
    End Sub

    Private Sub TextBox2_TextChanged(sender As Object, e As EventArgs) Handles TextBox2.TextChanged

    End Sub

    Dim FileName As String
    Dim Writer As IO.StreamWriter
    Dim Encode As System.Text.Encoding
    Private Sub Button5_Click(sender As Object, e As EventArgs) Handles Button5.Click

        If fileflg = 0 Then
            fileflg = 1

            Encode = System.Text.Encoding.GetEncoding("Shift-JIS")
            FileName = "out" & file_num & ".csv"
            Writer = New IO.StreamWriter(FileName, False, Encode)

            Dim dt1 As DateTime = DateTime.Now

            'disp_recv_str_log = dt1.ToString("yyyy-MM-dd HH時mm分ss秒")
            disp_recv_str_log = dt1.ToString("yyyy/MM/dd HH:mm:ss")
            disp_recv_str_log = disp_recv_str_log & vbCrLf
            Writer.Write(disp_recv_str_log)
"
        Else
            fileflg = 0

            Writer.Close()
        End If

        If fileflg = 1 Then
            Button5.Text = "ファイル書き込み中"
        Else
            Button5.Text = "ファイルclose中"
        End If

    End Sub
End Class